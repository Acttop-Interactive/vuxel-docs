import{_ as s,c as e,a0 as a,o as t}from"./chunks/framework.CiFqC8g5.js";const d=JSON.parse('{"title":"Components","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref/components.md","filePath":"docs/ref/components.md"}'),l={name:"docs/ref/components.md"};function n(o,i,h,p,r,k){return t(),e("div",null,i[0]||(i[0]=[a(`<h1 id="components" tabindex="-1">Components <a class="header-anchor" href="#components" aria-label="Permalink to &quot;Components&quot;">​</a></h1><p>The Components module allows you to define UI elements and their properties declaratively.</p><h2 id="components-new-class-props-self-instance" tabindex="-1">Components.New(class, props, self) -&gt; <code>Instance</code> <a class="header-anchor" href="#components-new-class-props-self-instance" aria-label="Permalink to &quot;Components.New(class, props, self) -&gt; \`Instance\`&quot;">​</a></h2><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>class <ul><li>Type: <code>string</code></li><li>Required: <code>Yes</code></li><li>Description: The Roblox UI class to create (e.g., <code>&quot;Frame&quot;</code>, <code>&quot;TextLabel&quot;</code>).</li></ul></li><li>props <ul><li>Type: <code>table</code></li><li>Required: <code>Yes</code></li><li>Description: A table containing properties, events, children, and lifecycle hooks for the component.</li></ul></li><li>self <ul><li>Type: <code>table</code></li><li>Required: <code>No</code></li><li>Description: Optional table to store component references (usually the parent component’s <code>self</code>).</li></ul></li></ol><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>Instance <ul><li>Type: <code>Instance</code></li><li>Always: <code>Yes</code></li><li>Description: The newly created Roblox UI component instance.</li></ul></li></ol><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Creates a new UI component of the specified class and applies the given properties.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myButton </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">New</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TextButton&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Click Me!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UDim2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="components-template-template-parentself-instance" tabindex="-1">Components.Template(template, parentSelf) -&gt; <code>Instance</code> <a class="header-anchor" href="#components-template-template-parentself-instance" aria-label="Permalink to &quot;Components.Template(template, parentSelf) -&gt; \`Instance\`&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <code>Vuxel.Template</code> instead!</p></div><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>template <ul><li>Type: <code>table</code></li><li>Required: <code>Yes</code></li><li>Description: A table-based component template describing the UI structure and properties.</li></ul></li><li>parentSelf <ul><li>Type: <code>table</code></li><li>Required: <code>No</code></li><li>Description: Optional table from the parent component to store child component references.</li></ul></li></ol><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>Instance <ul><li>Type: <code>Instance</code></li><li>Always: <code>Yes</code></li><li>Description: The root instance created from the template, with all nested children.</li></ul></li></ol><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Creates a nested UI component structure from a <code>table-based template</code>.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> template </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Class </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Frame&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UDim2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Children </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Class </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;TextLabel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, Vuxel!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UDim2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> frame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(template)</span></span></code></pre></div><h2 id="components-registerlifecyclehook-instance-hookname-callback-void" tabindex="-1">Components.RegisterLifecycleHook(instance, hookName, callback) -&gt; &#39;void&#39; <a class="header-anchor" href="#components-registerlifecyclehook-instance-hookname-callback-void" aria-label="Permalink to &quot;Components.RegisterLifecycleHook(instance, hookName, callback) -&gt; &#39;void&#39;&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <code>Vuxel.RegisterLifecycleHook</code> instead!</p></div><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>instance <ul><li>Type: <code>Instance</code></li><li>Required: <code>Yes</code></li><li>Description: The component instance on which to register the lifecycle hook.</li></ul></li><li>hookName <ul><li>Type: <code>string</code></li><li>Required: <code>Yes</code></li><li>Description: The name of the lifecycle hook (e.g., <code>&quot;onMounted&quot;</code>, &quot;<code>onDestroyed&quot;</code>).</li></ul></li><li>callback <ul><li>Type: <code>function</code></li><li>Required: <code>Yes</code></li><li>Description: The function to call when the lifecycle hook is triggered.</li></ul></li></ol><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; lifecycle hook is registered internally.</li></ul></li></ol><h3 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Registers a lifecycle hook (onMounted, onDestroyed, etc.) for a component.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RegisterLifecycleHook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myButton, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;onMounted&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Button mounted!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="components-removecomponent-instance-void" tabindex="-1">Components.RemoveComponent(instance) -&gt; &#39;void&#39; <a class="header-anchor" href="#components-removecomponent-instance-void" aria-label="Permalink to &quot;Components.RemoveComponent(instance) -&gt; &#39;void&#39;&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <code>Vuxel.RemoveComponent</code> instead!</p></div><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>instance <ul><li>Type: <code>Instance</code></li><li>Required: <code>Yes</code></li><li>Description: The component instance to remove, triggering its <code>&quot;onDestroyed&quot;</code> lifecycle hook if it exists.</li></ul></li></ol><h3 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; lifecycle hook is registered internally.</li></ul></li></ol><h3 id="description-3" tabindex="-1">Description <a class="header-anchor" href="#description-3" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Removes a component and calls its onDestroyed hook.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RemoveComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myButton)</span></span></code></pre></div>`,37)]))}const E=s(l,[["render",n]]);export{d as __pageData,E as default};
