import{_ as a,c as i,a0 as s,o as r}from"./chunks/framework.Dgp83GwK.js";const u=JSON.parse('{"title":"References","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref/references.md","filePath":"docs/ref/references.md"}'),l={name:"docs/ref/references.md"};function t(n,e,o,c,d,h){return r(),i("div",null,e[0]||(e[0]=[s('<h1 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h1><p>The References module makes it easy to store and retrive referenses to components or ui elements.</p><h2 id="references-add-name-component-void" tabindex="-1">References.Add(name, component) -&gt; <code>void</code> <a class="header-anchor" href="#references-add-name-component-void" aria-label="Permalink to &quot;References.Add(name, component) -&gt; `void`&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use <code>Vuxel.SetRef</code> for more secure handling!</p></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>name <ul><li>Type: <code>string</code></li><li>Required: <code>Yes</code></li><li>Description: The unique name for the reference.</li></ul></li><li>component <ul><li>Type: <code>Instance</code></li><li>Required: <code>Yes</code></li><li>Description: The component instance to store as a reference.</li></ul></li></ol><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; adds the component to the references.</li></ul></li></ol><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Add a reference by a unique name.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">References</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, component)</span></span></code></pre></div><h2 id="references-get-name-instance" tabindex="-1">References.Get(name) -&gt; <code>Instance</code> <a class="header-anchor" href="#references-get-name-instance" aria-label="Permalink to &quot;References.Get(name) -&gt; `Instance`&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use <code>Vuxel.GetRef</code> for more secure handling!</p></div><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>name <ul><li>Type: <code>string</code></li><li>Required: <code>Yes</code></li><li>Description: The name of the reference to retrieve.</li></ul></li></ol><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>Instance <ul><li>Type: <code>Instance | nil</code></li><li>Always: <code>No</code></li><li>Description: The component instance associated with <code>name</code>, or <code>nil</code> if not found.</li></ul></li></ol><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Get a reference by a unique name.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">References</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name)</span></span></code></pre></div><h2 id="references-remove-name-void" tabindex="-1">References.Remove(name) -&gt; <code>void</code> <a class="header-anchor" href="#references-remove-name-void" aria-label="Permalink to &quot;References.Remove(name) -&gt; `void`&quot;">​</a></h2><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>name <ul><li>Type: <code>string</code></li><li>Required: <code>Yes</code></li><li>Description: The name of the reference to remove.</li></ul></li></ol><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; removes the specified reference.</li></ul></li></ol><h3 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Remove a reference by a unique name.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">References</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name)</span></span></code></pre></div><h2 id="references-clear-void" tabindex="-1">References.Clear() -&gt; <code>void</code> <a class="header-anchor" href="#references-clear-void" aria-label="Permalink to &quot;References.Clear() -&gt; `void`&quot;">​</a></h2><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li>None</li></ul><h3 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; clears all references.</li></ul></li></ol><h3 id="description-3" tabindex="-1">Description <a class="header-anchor" href="#description-3" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Removes all references for cleanup.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">References</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="references-listall-printprefix-void" tabindex="-1">References.ListAll(printPrefix) -&gt; <code>void</code> <a class="header-anchor" href="#references-listall-printprefix-void" aria-label="Permalink to &quot;References.ListAll(printPrefix) -&gt; `void`&quot;">​</a></h2><h3 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>printPrefix <ul><li>Type: <code>string</code></li><li>Required: <code>No</code></li><li>Description: Optional prefix to print before each reference, used for debugging.</li></ul></li></ol><h3 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; prints all references with an optional prefix.</li></ul></li></ol><h3 id="description-4" tabindex="-1">Description <a class="header-anchor" href="#description-4" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Prints all references for debug.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">References</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ListAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>',44)]))}const k=a(l,[["render",t]]);export{u as __pageData,k as default};
