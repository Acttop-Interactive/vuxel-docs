import{_ as a,c as i,a0 as s,o as t}from"./chunks/framework.CiFqC8g5.js";const p=JSON.parse('{"title":"Hooks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref/hooks.md","filePath":"docs/ref/hooks.md"}'),l={name:"docs/ref/hooks.md"};function o(n,e,h,r,c,d){return t(),i("div",null,e[0]||(e[0]=[s('<h1 id="hooks" tabindex="-1">Hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;Hooks&quot;">​</a></h1><p>The Hooks module provides hooks similar to React.js for state and effect management.</p><h2 id="hooks-usestate-initialvalue-state" tabindex="-1">Hooks.useState(initialValue) -&gt; <code>State</code> <a class="header-anchor" href="#hooks-usestate-initialvalue-state" aria-label="Permalink to &quot;Hooks.useState(initialValue) -&gt; `State`&quot;">​</a></h2><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>initialValue <ul><li>Type: <code>any</code></li><li>Required: <code>Yes</code></li><li>Description: Initial value for the state hook.</li></ul></li></ol><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>State <ul><li>Type: <code>State</code></li><li>Always: <code>Yes</code></li><li>Description: A new <code>State</code> object initialized with the given value.</li></ul></li></ol><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Creates a new reactive state variable.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="hooks-useeffect-state-callback-void" tabindex="-1">Hooks.useEffect(state, callback) -&gt; <code>void</code> <a class="header-anchor" href="#hooks-useeffect-state-callback-void" aria-label="Permalink to &quot;Hooks.useEffect(state, callback) -&gt; `void`&quot;">​</a></h2><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>state <ul><li>Type: <code>State</code></li><li>Required: <code>Yes</code></li><li>Description: The <code>State</code> object to monitor for changes.</li></ul></li><li>callback <ul><li>Type: <code>function</code></li><li>Required: <code>Yes</code></li><li>Description: The function to call when <code>state</code> changes.</li></ul></li></ol><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; registers a callback that triggers when the state changes.</li></ul></li></ol><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Executes the callback whenever the given state changes.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">useEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(count, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newCount)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Count changed to&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, newCount)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>',18)]))}const u=a(l,[["render",o]]);export{p as __pageData,u as default};
