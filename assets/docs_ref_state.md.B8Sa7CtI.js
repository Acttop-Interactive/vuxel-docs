import{_ as a,c as i,a2 as t,o as s}from"./chunks/framework.Cc9mBJaF.js";const u=JSON.parse('{"title":"State","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref/state.md","filePath":"docs/ref/state.md"}'),l={name:"docs/ref/state.md"};function n(r,e,o,h,d,p){return s(),i("div",null,e[0]||(e[0]=[t('<h1 id="state" tabindex="-1">State <a class="header-anchor" href="#state" aria-label="Permalink to &quot;State&quot;">​</a></h1><p>The State module is used to create reactive state objects that can be bound to UI components.</p><h2 id="state-new-initialvalue-state" tabindex="-1">State.new(initialValue) -&gt; <code>State</code> <a class="header-anchor" href="#state-new-initialvalue-state" aria-label="Permalink to &quot;State.new(initialValue) -&gt; `State`&quot;">​</a></h2><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>initialValue <ul><li>Type: <code>any</code></li><li>Required: <code>Yes</code></li><li>Description: The initial value for the state. Cannot be <code>nil</code>.</li></ul></li></ol><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>State <ul><li>Type: <code>State</code></li><li>Always: <code>Yes</code></li><li>Description: A new <code>State</code> object initialized with the given value.</li></ul></li></ol><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Creates a new state object.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">State</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="state-set-newvalue-void" tabindex="-1">State:Set(newValue) -&gt; <code>void</code> <a class="header-anchor" href="#state-set-newvalue-void" aria-label="Permalink to &quot;State:Set(newValue) -&gt; `void`&quot;">​</a></h2><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>newValue <ul><li>Type: <code>any</code></li><li>Required: <code>Yes</code></li><li>Description: The new value for the state. Cannot be <code>nil</code>.</li></ul></li></ol><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; the state is updated internally.</li></ul></li></ol><h3 id="description-1" tabindex="-1">Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Updates the state with a new value and triggers any listeners.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- State value is now 5</span></span></code></pre></div><h2 id="state-get-value" tabindex="-1">State:Get() -&gt; <code>Value</code> <a class="header-anchor" href="#state-get-value" aria-label="Permalink to &quot;State:Get() -&gt; `Value`&quot;">​</a></h2><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ul><li>None</li></ul><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>Value <ul><li>Type: <code>any</code></li><li>Always: <code>Yes</code></li><li>Description: The current value of the state.</li></ul></li></ol><h3 id="description-2" tabindex="-1">Description <a class="header-anchor" href="#description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Returns the current state value.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Outputs: 5</span></span></code></pre></div><h2 id="state-bindto-instance-property-void" tabindex="-1">State:BindTo(instance, property) -&gt; <code>void</code> <a class="header-anchor" href="#state-bindto-instance-property-void" aria-label="Permalink to &quot;State:BindTo(instance, property) -&gt; `void`&quot;">​</a></h2><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><ol><li>instance <ul><li>Type: <code>Instance</code></li><li>Required: <code>Yes</code></li><li>Description: The Roblox instance to bind the state to.</li></ul></li><li>property <ul><li>Type: <code>string</code></li><li>Required: <code>Yes</code></li><li>Description: The property of the instance to update based on state changes.</li></ul></li></ol><h3 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><ol><li>void <ul><li>Type: <code>nil</code></li><li>Always: <code>Yes</code></li><li>Description: No return value; binds the state to the specified instance property.</li></ul></li></ol><h3 id="description-3" tabindex="-1">Description <a class="header-anchor" href="#description-3" aria-label="Permalink to &quot;Description&quot;">​</a></h3><p>Binds a state to a UI property, updating the state when the property changes.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BindTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myTextLabel, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>',34)]))}const k=a(l,[["render",n]]);export{u as __pageData,k as default};
