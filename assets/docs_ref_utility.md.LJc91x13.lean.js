import{_ as s,c as a,a0 as t,o as e}from"./chunks/framework.Dgp83GwK.js";const c=JSON.parse('{"title":"Utility Functions","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ref/utility.md","filePath":"docs/ref/utility.md"}'),l={name:"docs/ref/utility.md"};function n(p,i,h,k,o,r){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="utility-functions" tabindex="-1">Utility Functions <a class="header-anchor" href="#utility-functions" aria-label="Permalink to &quot;Utility Functions&quot;">​</a></h1><p>The Utility module provides various helper functions.</p><h2 id="utility-createapp-uiframe-screengui-optional" tabindex="-1">Utility.CreateApp(UIFrame, screenGui <code>optional</code>) <a class="header-anchor" href="#utility-createapp-uiframe-screengui-optional" aria-label="Permalink to &quot;Utility.CreateApp(UIFrame, screenGui \`optional\`)&quot;">​</a></h2><p>Initializes a new app with the specified root frame, if no screenGui is given it will create a new <code>ScreenGui</code> and parent it to the LocalPlayer&#39;s PlayerGui. Passed screenGui&#39;s will get an added reference as &quot;<code>root</code>&quot;. Get it using <code>Vuxel.GetRef(&quot;root&quot;)</code>!</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <code>Vuxel.CreateApp</code> instead!</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>It is recomended to provide an already templated ui, use <code>Vuxel.Template</code> before creating an app if providing a table-based template, if not templated, CreateApp will template it for you but will trow a warning!</p></div><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rootFrame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Instance.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Frame&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CreateApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rootFrame)</span></span></code></pre></div><h2 id="utility-computed-callback" tabindex="-1">Utility.Computed(callback, ...) <a class="header-anchor" href="#utility-computed-callback" aria-label="Permalink to &quot;Utility.Computed(callback, ...)&quot;">​</a></h2><p>Creates a computed property that automatically updates when its dependencies change.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also use <code>Vuxel.Computed</code> instead!</p></div><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">State</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> greeting </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vuxel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Utility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Computed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, &quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name)</span></span></code></pre></div>`,11)]))}const u=s(l,[["render",n]]);export{c as __pageData,u as default};
